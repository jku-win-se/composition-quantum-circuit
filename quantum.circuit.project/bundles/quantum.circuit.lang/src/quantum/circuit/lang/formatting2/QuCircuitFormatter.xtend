/*
 * generated by Xtext 2.26.0
 */
package quantum.circuit.lang.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import quantum.circuit.lang.services.QuCircuitGrammarAccess
import qucircuit.QuantumCircuit
import qucircuit.QuantumRegister

class QuCircuitFormatter extends AbstractFormatter2 {
	
	@Inject extension QuCircuitGrammarAccess

	def dispatch void format(QuantumCircuit quantumCircuit, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (quantumRegister : quantumCircuit.quantumRegisters) {
			quantumRegister.format
		}
		for (classicRegister : quantumCircuit.classicRegisters) {
			classicRegister.format
		}
		for (layer : quantumCircuit.layers) {
			layer.format
		}
	}

	
	// TODO: implement for ClassicRegister, Layer, ConcreteQuantumOperation, StatePreparation, Measurement, ElementaryQuantumGate, CompositeQuantumGate, Loop, EClass, EAnnotation, ETypeParameter, EOperation, EGenericType, EParameter, EDataType, EEnum, EEnumLiteral, EAttribute, EReference
}
