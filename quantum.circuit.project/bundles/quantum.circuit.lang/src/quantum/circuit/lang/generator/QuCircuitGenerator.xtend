/*
 * generated by Xtext 2.26.0
 */
package quantum.circuit.lang.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import quantum.circuit.qiskit.library.CompositeGatesUtils
import quantum.circuit.qiskit.utils.QiskitCodeGenerationUtils
import quantum.circuit.qiskit.library.ElementaryGateUtils
import quantum.circuit.qiskit.library.Measurements
import quantum.circuit.qiskit.library.LoopOperationsUtils
import quantum.circuit.qiskit.circuit.Circuit
import org.eclipse.emf.ecore.EObject
import qucircuit.QuantumCircuit
import quope.QuantumOperationLibrary
import quope.QuopePackage
import org.eclipse.emf.common.util.URI
import org.eclipse.emf.ecore.resource.ResourceSet
import quantum.operation.definition.api.utils.QuantumOperationUtils
import java.util.Collections

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class QuCircuitGenerator extends AbstractGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		
		val String resourceName = resource.URI.trimFileExtension.lastSegment;
		val EObject rootEObject = resource.contents.get(0);
		
		val quCircuit = rootEObject as QuantumCircuit;					
		fsa.generateFile('/' + QiskitCodeGenerationUtils.QISKIT_FOLDER_NAME + '-'+ resourceName +'/Composite_Gates.' + QiskitCodeGenerationUtils.PYTHON_FILE_EXTENSION,
				new CompositeGatesUtils().generateLibraryFile(quCircuit)
		);
		fsa.generateFile('/' + QiskitCodeGenerationUtils.QISKIT_FOLDER_NAME + '-'+ resourceName + '/Elementary_Gates.' + QiskitCodeGenerationUtils.PYTHON_FILE_EXTENSION, 
			new ElementaryGateUtils().generateLibraryFile(quCircuit)
		);
		
		fsa.generateFile('/' + QiskitCodeGenerationUtils.QISKIT_FOLDER_NAME + '-'+ resourceName + '/Measurements.' + QiskitCodeGenerationUtils.PYTHON_FILE_EXTENSION, 
			new Measurements().generateLibraryFile(quCircuit)
		);
		
		fsa.generateFile('/' + QiskitCodeGenerationUtils.QISKIT_FOLDER_NAME + '-'+ resourceName + '/Loop_Operations.' + QiskitCodeGenerationUtils.PYTHON_FILE_EXTENSION, 
			new LoopOperationsUtils().generateLibraryFile(quCircuit)
		);
			
		fsa.generateFile('/' + QiskitCodeGenerationUtils.QISKIT_FOLDER_NAME + '-'+ resourceName + '/main-' + resourceName + "." + QiskitCodeGenerationUtils.PYTHON_FILE_EXTENSION, 
			new Circuit().generateCode(quCircuit)
		);		
	}	
}
