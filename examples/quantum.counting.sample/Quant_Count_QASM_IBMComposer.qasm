OPENQASM 2.0;
include "qelib1.inc";
gate cgrover a, b, c, d, e {
  p(pi / 2) a;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  p(pi / 2) a;
  u(0, 0, 0) d;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, c, d;
  p(-pi / 8) a;
  p(-pi / 8) d;
  cx a, d;
  u(0, 0, pi / 8) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, b, d;
  p(pi / 8) a;
  p(pi / 8) d;
  cx a, d;
  u(0, 0, -pi / 8) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, c, d;
  p(pi / 8) a;
  p(pi / 8) c;
  cx a, c;
  u(0, 0, -pi / 8) c;
  cx a, c;
  p(-pi / 8) a;
  u(0, 0, 0) c;
  p(-pi / 8) d;
  cx a, d;
  u(0, 0, pi / 8) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, b, d;
  ccx a, b, c;
  p(pi / 8) a;
  p(pi / 8) b;
  cx a, b;
  u(0, 0, -pi / 8) b;
  cx a, b;
  p(-pi / 8) a;
  u(0, 0, 0) b;
  p(-pi / 8) c;
  cx a, c;
  u(0, 0, pi / 8) c;
  cx a, c;
  u(0, 0, 0) c;
  ccx a, b, c;
  cx a, c;
  p(pi / 8) a;
  p(pi / 8) d;
  cx a, d;
  u(0, 0, -pi / 8) d;
  cx a, d;
  p(pi / 2) a;
  u(0, 0, 0) d;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  p(pi / 2) a;
  u(0, 0, 0) d;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  p(pi / 2) a;
  p(pi / 2) e;
  cx a, e;
  u(0, 0, -pi / 2) e;
  cx a, e;
  u(0, 0, 0) e;
  ry(pi / 4) e;
  cx a, e;
  ry(-pi / 4) e;
  cx a, e;
  p(0) a;
  p(0) e;
  cx a, e;
  u(0, 0, 0) e;
  cx a, e;
  p(pi / 2) a;
  u(0, 0, 0) e;
  p(pi / 2) e;
  cx a, e;
  u(0, 0, -pi / 2) e;
  cx a, e;
  u(0, 0, 0) e;
  ry(pi / 4) e;
  cx a, e;
  ry(-pi / 4) e;
  cx a, e;
  p(0) a;
  p(0) e;
  cx a, e;
  u(0, 0, 0) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, d, e;
  p(-pi / 8) a;
  p(-pi / 8) e;
  cx a, e;
  u(0, 0, pi / 8) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  p(pi / 8) a;
  p(pi / 8) e;
  cx a, e;
  u(0, 0, -pi / 8) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, d, e;
  p(pi / 8) a;
  p(pi / 8) d;
  cx a, d;
  u(0, 0, -pi / 8) d;
  cx a, d;
  p(-pi / 8) a;
  u(0, 0, 0) d;
  p(-pi / 8) e;
  cx a, e;
  u(0, 0, pi / 8) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  ccx a, b, d;
  p(pi / 8) a;
  p(pi / 8) b;
  cx a, b;
  u(0, 0, -pi / 8) b;
  cx a, b;
  p(-pi / 8) a;
  u(0, 0, 0) b;
  p(-pi / 8) d;
  cx a, d;
  u(0, 0, pi / 8) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, b, d;
  cx a, d;
  p(pi / 2) a;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  p(pi / 2) a;
  u(0, 0, 0) d;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  p(pi / 8) a;
  u(0, 0, 0) d;
  p(pi / 8) e;
  cx a, e;
  u(0, 0, -pi / 8) e;
  cx a, e;
  p(pi / 2) a;
  u(0, 0, 0) e;
  p(pi / 2) e;
  cx a, e;
  u(0, 0, -pi / 2) e;
  cx a, e;
  u(0, 0, 0) e;
  ry(pi / 4) e;
  cx a, e;
  ry(-pi / 4) e;
  cx a, e;
  p(0) a;
  p(0) e;
  cx a, e;
  u(0, 0, 0) e;
  cx a, e;
  p(pi / 2) a;
  u(0, 0, 0) e;
  p(pi / 2) e;
  cx a, e;
  u(0, 0, -pi / 2) e;
  cx a, e;
  u(0, 0, 0) e;
  ry(pi / 4) e;
  cx a, e;
  ry(-pi / 4) e;
  cx a, e;
  p(0) a;
  p(0) e;
  cx a, e;
  u(0, 0, 0) e;
  cx a, e;
  u(0, 0, 0) e;
  cx a, e;
  p(pi / 16) a;
  p(pi / 16) e;
  cx a, e;
  u(0, 0, -pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, e, d;
  p(-pi / 16) a;
  p(-pi / 16) d;
  cx a, d;
  u(0, 0, pi / 16) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, e, d;
  p(pi / 16) a;
  p(pi / 16) d;
  cx a, d;
  u(0, 0, -pi / 16) d;
  cx a, d;
  ccx a, e, c;
  p(-pi / 16) a;
  p(-pi / 16) c;
  cx a, c;
  u(0, 0, pi / 16) c;
  cx a, c;
  u(0, 0, 0) c;
  u(0, 0, 0) d;
  ccx a, c, d;
  p(pi / 16) a;
  p(pi / 16) d;
  cx a, d;
  u(0, 0, -pi / 16) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, c, d;
  p(-pi / 16) a;
  p(-pi / 16) d;
  cx a, d;
  u(0, 0, pi / 16) d;
  cx a, d;
  ccx a, e, c;
  p(pi / 16) a;
  p(pi / 16) c;
  cx a, c;
  u(0, 0, -pi / 16) c;
  cx a, c;
  u(0, 0, 0) c;
  u(0, 0, 0) d;
  ccx a, c, d;
  p(-pi / 16) a;
  p(-pi / 16) d;
  cx a, d;
  u(0, 0, pi / 16) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, c, d;
  ccx a, c, b;
  p(-pi / 16) a;
  p(-pi / 16) b;
  cx a, b;
  u(0, 0, pi / 16) b;
  cx a, b;
  p(pi / 16) a;
  u(0, 0, 0) b;
  p(pi / 16) d;
  cx a, d;
  u(0, 0, -pi / 16) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, b, d;
  p(pi / 16) a;
  p(pi / 16) d;
  cx a, d;
  u(0, 0, -pi / 16) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, b, d;
  p(-pi / 16) a;
  p(-pi / 16) d;
  cx a, d;
  u(0, 0, pi / 16) d;
  cx a, d;
  ccx a, e, b;
  p(pi / 16) a;
  p(pi / 16) b;
  cx a, b;
  u(0, 0, -pi / 16) b;
  cx a, b;
  u(0, 0, 0) b;
  u(0, 0, 0) d;
  ccx a, b, d;
  p(-pi / 16) a;
  p(-pi / 16) d;
  cx a, d;
  u(0, 0, pi / 16) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, b, d;
  ccx a, c, b;
  p(-pi / 16) a;
  p(-pi / 16) b;
  cx a, b;
  u(0, 0, pi / 16) b;
  cx a, b;
  cx a, c;
  p(pi / 2) a;
  u(0, 0, 0) b;
  p(pi / 2) c;
  cx a, c;
  u(0, 0, -pi / 2) c;
  cx a, c;
  u(0, 0, 0) c;
  ry(pi / 4) c;
  cx a, c;
  ry(-pi / 4) c;
  cx a, c;
  p(0) a;
  p(0) c;
  cx a, c;
  u(0, 0, 0) c;
  cx a, c;
  u(0, 0, 0) c;
  cx a, c;
  p(pi / 16) a;
  p(pi / 16) d;
  cx a, d;
  u(0, 0, -pi / 16) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, b, d;
  p(pi / 16) a;
  p(pi / 16) d;
  cx a, d;
  u(0, 0, -pi / 16) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, b, d;
  p(-pi / 16) a;
  p(-pi / 16) d;
  cx a, d;
  u(0, 0, pi / 16) d;
  cx a, d;
  ccx a, e, b;
  p(pi / 16) a;
  p(pi / 16) b;
  cx a, b;
  u(0, 0, -pi / 16) b;
  cx a, b;
  u(0, 0, 0) b;
  u(0, 0, 0) d;
  ccx a, b, d;
  p(-pi / 16) a;
  p(-pi / 16) d;
  cx a, d;
  u(0, 0, pi / 16) d;
  cx a, d;
  u(0, 0, 0) d;
  ccx a, b, d;
  p(pi / 2) a;
  p(pi / 2) b;
  cx a, b;
  u(0, 0, -pi / 2) b;
  cx a, b;
  u(0, 0, 0) b;
  ry(pi / 4) b;
  cx a, b;
  ry(-pi / 4) b;
  cx a, b;
  p(0) a;
  p(0) b;
  cx a, b;
  u(0, 0, 0) b;
  cx a, b;
  u(0, 0, 0) b;
  cx a, b;
  p(pi / 16) a;
  p(pi / 16) d;
  cx a, d;
  u(0, 0, -pi / 16) d;
  cx a, d;
  p(pi / 2) a;
  u(0, 0, 0) d;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  p(pi / 2) a;
  u(0, 0, 0) d;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  p(pi / 2) a;
  u(0, 0, 0) d;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  p(pi / 16) a;
  p(pi / 16) d;
  cx a, d;
  u(0, 0, -pi / 16) d;
  cx a, d;
  cx a, e;
  p(pi / 2) a;
  u(0, 0, 0) d;
  p(pi / 2) e;
  cx a, e;
  u(0, 0, -pi / 2) e;
  cx a, e;
  p(pi / 2) a;
  u(0, 0, 0) e;
  p(pi / 2) e;
  cx a, e;
  u(0, 0, -pi / 2) e;
  cx a, e;
  u(0, 0, 0) e;
  ry(pi / 4) e;
  cx a, e;
  ry(-pi / 4) e;
  cx a, e;
  p(0) a;
  p(0) e;
  cx a, e;
  u(0, 0, 0) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, d, e;
  p(-pi / 16) a;
  p(-pi / 16) e;
  cx a, e;
  u(0, 0, pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, d, e;
  ccx a, d, c;
  p(-pi / 16) a;
  p(-pi / 16) c;
  cx a, c;
  u(0, 0, pi / 16) c;
  cx a, c;
  p(pi / 16) a;
  u(0, 0, 0) c;
  p(pi / 16) e;
  cx a, e;
  u(0, 0, -pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, c, e;
  p(pi / 16) a;
  p(pi / 16) e;
  cx a, e;
  u(0, 0, -pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, c, e;
  ccx a, d, c;
  p(pi / 16) a;
  p(pi / 16) c;
  cx a, c;
  u(0, 0, -pi / 16) c;
  cx a, c;
  p(-pi / 16) a;
  u(0, 0, 0) c;
  p(-pi / 16) e;
  cx a, e;
  u(0, 0, pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, c, e;
  p(-pi / 16) a;
  p(-pi / 16) e;
  cx a, e;
  u(0, 0, pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, c, e;
  ccx a, c, b;
  p(-pi / 16) a;
  p(-pi / 16) b;
  cx a, b;
  u(0, 0, pi / 16) b;
  cx a, b;
  p(pi / 16) a;
  u(0, 0, 0) b;
  p(pi / 16) e;
  cx a, e;
  u(0, 0, -pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  p(pi / 16) a;
  p(pi / 16) e;
  cx a, e;
  u(0, 0, -pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  ccx a, d, b;
  p(pi / 16) a;
  p(pi / 16) b;
  cx a, b;
  u(0, 0, -pi / 16) b;
  cx a, b;
  p(-pi / 16) a;
  u(0, 0, 0) b;
  p(-pi / 16) e;
  cx a, e;
  u(0, 0, pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  p(-pi / 16) a;
  p(-pi / 16) e;
  cx a, e;
  u(0, 0, pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  ccx a, c, b;
  p(-pi / 16) a;
  p(-pi / 16) b;
  cx a, b;
  u(0, 0, pi / 16) b;
  cx a, b;
  cx a, c;
  p(pi / 2) a;
  u(0, 0, 0) b;
  p(pi / 2) c;
  cx a, c;
  u(0, 0, -pi / 2) c;
  cx a, c;
  u(0, 0, 0) c;
  ry(pi / 4) c;
  cx a, c;
  ry(-pi / 4) c;
  cx a, c;
  p(0) a;
  p(0) c;
  cx a, c;
  u(0, 0, 0) c;
  cx a, c;
  p(pi / 16) a;
  u(0, 0, 0) c;
  p(pi / 16) e;
  cx a, e;
  u(0, 0, -pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  p(pi / 16) a;
  p(pi / 16) e;
  cx a, e;
  u(0, 0, -pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  ccx a, d, b;
  p(pi / 16) a;
  p(pi / 16) b;
  cx a, b;
  u(0, 0, -pi / 16) b;
  cx a, b;
  cx a, d;
  p(pi / 2) a;
  u(0, 0, 0) b;
  p(pi / 2) d;
  cx a, d;
  u(0, 0, -pi / 2) d;
  cx a, d;
  u(0, 0, 0) d;
  ry(pi / 4) d;
  cx a, d;
  ry(-pi / 4) d;
  cx a, d;
  p(0) a;
  p(0) d;
  cx a, d;
  u(0, 0, 0) d;
  cx a, d;
  p(-pi / 16) a;
  u(0, 0, 0) d;
  p(-pi / 16) e;
  cx a, e;
  u(0, 0, pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  p(-pi / 16) a;
  p(-pi / 16) e;
  cx a, e;
  u(0, 0, pi / 16) e;
  cx a, e;
  u(0, 0, 0) e;
  ccx a, b, e;
  cx a, b;
  p(pi / 2) a;
  p(pi / 2) b;
  cx a, b;
  u(0, 0, -pi / 2) b;
  cx a, b;
  u(0, 0, 0) b;
  ry(pi / 4) b;
  cx a, b;
  ry(-pi / 4) b;
  cx a, b;
  p(0) a;
  p(0) b;
  cx a, b;
  u(0, 0, 0) b;
  cx a, b;
  p(pi / 16) a;
  u(0, 0, 0) b;
  p(pi / 16) e;
  cx a, e;
  u(0, 0, -pi / 16) e;
  cx a, e;
  p(pi / 2) a;
  u(0, 0, 0) e;
  p(pi / 2) e;
  cx a, e;
  u(0, 0, -pi / 2) e;
  cx a, e;
  u(0, 0, 0) e;
  ry(pi / 4) e;
  cx a, e;
  ry(-pi / 4) e;
  cx a, e;
  p(0) a;
  p(0) e;
  cx a, e;
  u(0, 0, 0) e;
  cx a, e;
  p(pi / 2) a;
  u(0, 0, 0) e;
  p(pi / 2) e;
  cx a, e;
  u(0, 0, -pi / 2) e;
  cx a, e;
  u(0, 0, 0) e;
}

qreg q0[4];
qreg q1[4];
creg c0[4];
cgrover q0[0],q1[0],q1[1],q1[2],q1[3];
cgrover q0[1],q1[0],q1[1],q1[2],q1[3];
cgrover q0[1],q1[0],q1[1],q1[2],q1[3];
cgrover q0[2],q1[0],q1[1],q1[2],q1[3];
cgrover q0[2],q1[0],q1[1],q1[2],q1[3];
cgrover q0[2],q1[0],q1[1],q1[2],q1[3];
cgrover q0[2],q1[0],q1[1],q1[2],q1[3];
cgrover q0[3],q1[0],q1[1],q1[2],q1[3];
cgrover q0[3],q1[0],q1[1],q1[2],q1[3];
cgrover q0[3],q1[0],q1[1],q1[2],q1[3];
cgrover q0[3],q1[0],q1[1],q1[2],q1[3];
cgrover q0[3],q1[0],q1[1],q1[2],q1[3];
cgrover q0[3],q1[0],q1[1],q1[2],q1[3];
cgrover q0[3],q1[0],q1[1],q1[2],q1[3];
cgrover q0[3],q1[0],q1[1],q1[2],q1[3];
swap q0[2],q0[1];
swap q0[3],q0[0];
h q0[0];
cp(-pi/2) q0[0],q0[1];
h q0[1];
cp(-pi/2) q0[1],q0[2];
cp(-pi/4) q0[0],q0[2];
h q0[2];
cp(-pi/2) q0[2],q0[3];
cp(-pi/4) q0[1],q0[3];
cp(-pi/8) q0[0],q0[3];
h q0[3];
measure q0[0] -> c0[0];
measure q0[1] -> c0[1];
measure q0[2] -> c0[2];
measure q0[3] -> c0[3];
