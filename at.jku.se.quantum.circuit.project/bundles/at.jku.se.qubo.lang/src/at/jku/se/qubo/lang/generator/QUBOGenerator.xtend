/*
 * generated by Xtext 2.26.0
 */
package at.jku.se.qubo.lang.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.emf.common.util.URI
import qucircuit.QuCircuitPackage
import org.eclipse.emf.ecore.resource.ResourceSet
import at.jku.se.qubo.mm.qubo.Qubo
import at.jku.se.qubo.lang.utils.QuboUtils
import java.util.Collections

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class QUBOGenerator extends AbstractGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		var URI quCircuitURI = fsa.getURI('/').trimSegments(1).appendSegment('qu-circuit')
					.appendSegment(resource.URI.trimFileExtension.lastSegment + QuCircuitPackage.eNS_PREFIX);					
		var ResourceSet reset = resource.resourceSet; 
		var Resource quCircuit = reset.createResource(quCircuitURI);
		quCircuit.contents.add(createQuboCircuit(resource));
		quCircuit.save(Collections.EMPTY_MAP);
	}
	
	def createQuboCircuit(Resource resource) {
		var Qubo qubo = resource.contents.get(0) as Qubo;
		return QuboUtils.createQuboCircuit(qubo);
	}
	
}
